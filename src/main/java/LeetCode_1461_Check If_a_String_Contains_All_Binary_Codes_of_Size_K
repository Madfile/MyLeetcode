class LeetCode_1461_Check If_a_String_Contains_All_Binary_Codes_of_Size_K {
  class Solution {
  //     public boolean hasAllCodes(String s, int k) {
  //         //Actually BFS issue
  //         Queue<String> queue = new LinkedList<>();
  //         queue.offer("0");
  //         queue.offer("1");

  //         while(k > 0) {
  //             int size = queue.size();
  //             for (int i = 0; i < size; i++) {
  //                 String next = queue.poll();
  //                 if (!s.contains(next)) return false;
  //                 queue.offer(next + "0");
  //                 queue.offer(next + "1");
  //             }

  //             k--;
  //         }

  //         return true;
  //     }

      //Sliding window
      public boolean hasAllCodes(String s, int k) {
          int length = s.length();
          int counts = (int) Math.pow(2, k);
          if (length - k + 1 < counts)
              return false;
          Set<String> set = new HashSet<String>();
          StringBuffer sb = new StringBuffer();
          for (int i = 0; i < k; i++)
              sb.append(s.charAt(i));
          set.add(sb.toString());
          //System.out.println(set);
          for (int i = k; i < length; i++) {
              sb.deleteCharAt(0);
              sb.append(s.charAt(i));
              set.add(sb.toString());
              //System.out.println(set);
          }
          return set.size() == counts;
      }
  }
}
